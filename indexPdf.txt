const express = require('express');
const server = express();
server.use(express.json());

const cursos = ['Node JS', 'JavaScript', 'PHP', 'React Show', 'VueJS'];

// Middleware Global
server.use((req, res, next) => {
     console.log(`URL CHAMADA: ${req.url}`);

     return next();
});

// Middleware Local (especifico para tratar do INSERT de novos cursos)
function checkCurso(req, res, next) {
    if(!req.body.novo_curso) {
        return res.status(400).json({error:
            "Nome do curso é obrigatório neste formato: {'novo_nome': 'Lua'}"});
    }

    return next();
}

// Middleware Local (especifico para cursos que não existem)
function checkIDCurso(req, res, next) {
    const curso = cursos[req.params.index];

    if(!curso) {
        return res.status(400).json({ error:"O curso não existe no ID solicitado"});
    }

    return next();
}

// Criando meu SELECT
server.get('/curso',(req, res)=>{
    return res.json(cursos);
});

// Criando meu SELECT passando ID
server.get('/curso/:index', checkIDCurso, (req, res) => {
    const { index } = req.params;

    return res.json(cursos[index]);
});

// Permitindo INSERIR dados via API
server.post('/curso', checkCurso, (req,res)=>{
    const { novo_curso } = req.body;
    cursos.push(novo_curso);

    return res.json(cursos);
});

// Permitindo UPDATE de um curso
server.put('/curso/:index', checkIDCurso, (req,res)=>{
    const { index } =  req.params;
    const { curso } = req.body;

    cursos[index] = curso;

    return res.json(cursos);
});

// Permitindo DELETE de um curso
server.delete('/curso/:index',(req,res)=>{
    const { index } =  req.params;
    
    cursos.splice(index,1);

    return res.json({message: "Curso deletado com sucesso"});
});

server.listen(3000);